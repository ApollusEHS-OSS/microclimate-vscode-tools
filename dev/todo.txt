Important:
- Attach Debugger command to Starting state
- What to do with app logs when MC is restarted? Clear them all? Kill the outputStreams?
- externalize all strings :(

Annoying Release Stuff:
- Icons
- Copyrights
- Open Source-ability
    - Remove any internal issue links
    - Remove any references to other devs, teams
    - Add file headers and generally improve documentation

Less Important:

- Tests
    - Debug, restart tests are good
    - Would be great to get coverage for other commands - but for most of them, it's hard to test if the API calls worked
    - Debug tests try to connect the debugger twice for some reason. They still pass because the first connect succeeds, so the assets pass.
        - The second one failing doesn't matter because VSCode extension API sucks at reporting debugger attach failures (startDebugging still returns 'true')
- WebView for Overview page
    - Discuss with Portal creating an endpoint which sends a simple HTML page with NO <link rel>s with all the project info
        - Client (IDE) can request which stylesheet should be used for rendering (or provide the stylesheet itself).
        - Eclipse, VSCode dark, VSCode light, etc.
- Add .code-workspace file to project template and/or to microclimate-workspace
    - Recommend this extension

Backlog:
    - Telemetry
        - https://www.npmjs.com/package/amplitude
        - Considerations for open-source
    - Why is there no linting for Node projects?
        - Theia does not support eslint.
            - Issue to add this support: https://github.com/theia-ide/theia-apps/issues/65
            - Can still run eslint in the terminal
        - To get eslint to run WITHIN vscode without the user having to take action, we have to add an eslintrc to our template project
        - eg https://github.ibm.com/timetchells/node-test/blob/master/.eslintrc.json
        - If we have this file in the WORKSPACE ROOT (ie, won't work if microclimate-workspace is the root), then eslint will work.
        - See ~/Documents/*linting.png
        - We should document this, at the very least.
        - ACTION:
            - Bring it up on planning-languages, adding least-restrictive-as-possible .eslintrc to node template
    - Colors
        - Super annoying to have ANSI color escapes in app output
            - Applies to Eclipse and manual 'docker logs' too
            - OTOH we are rendering the color in the web UI, so we can't just pass --no-color to nodemon

https://github.com/Microsoft/java-debug/blob/master/com.microsoft.java.debug.core/src/main/java/com/microsoft/java/debug/core/protocol/Requests.java#L274