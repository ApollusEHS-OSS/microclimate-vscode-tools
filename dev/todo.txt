Important:
- Tests!
    - Debug, restart tests are good
    - Would be great to get coverage for other commands - but for most of them, it's hard to test if the API calls worked
- Give the user an easy way to clean up launch.json
- Why is there no linting for Node projects?
    - Theia does not support eslint.
        - Issue to add this support: https://github.com/theia-ide/theia-apps/issues/65
    - To get eslint to run WITHIN vscode without the user having to take action, we have to add an eslintrc to our template project
    - eg https://github.ibm.com/timetchells/node-test/blob/master/.eslintrc.json
    - If we have this file in the WORKSPACE ROOT (ie, won't work if microclimate-workspace is the root), then eslint will work.
    - See ~/Documents/*linting.png

Annoying Release Stuff:
- Icons
- externalize all strings :(
- Legal?
- Copyrights
- Open Source-ability
    - Remove any internal issue links
    - Remove any references to other devs, teams
    - Add file headers and generally improve documentation

Less Important:

- WebView for Overview page
    - Discuss with Portal-UI creating an endpoint which sends a simple HTML page with NO <link rel>s with all the project info
        - Client (IDE) can request which stylesheet should be used for rendering (or provide the stylesheet itself).
        - Eclipse, VSCode dark, VSCode light, etc.
- Add .code-workspace file to project template and/or to microclimate-workspace
    - Recommend this extension

Investigate:
    - Telemetry
        - https://www.npmjs.com/package/amplitude
        - Considerations for open-source

https://github.com/Microsoft/java-debug/blob/master/com.microsoft.java.debug.core/src/main/java/com/microsoft/java/debug/core/protocol/Requests.java#L274