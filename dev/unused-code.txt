///// Open in WebView
const rqOptions: request.Options = {
        url: uriToOpen.toString(),
        headers: {
            // Set our accept header to mimic Chrome's, so we don't get a JSON response eg from the liberty template project.
            "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8",
        }
    };

    try {
        const httpResult = await request.get(rqOptions);
        // console.log("Result from " + uriToOpen, httpResult);

        // check return code, check for null
        // then check if it's html
        if (httpResult != null && httpResult.toString().includes("<html>")) {

        }
        else {
            vscode.window.showErrorMessage("Got a response, but it's not an HTML page");
            console.error("Bad HTTP result", httpResult);
        }
    }
    catch (err) {
        vscode.window.showErrorMessage(err);
        console.error(err);
    }

///// End open in WebView

///// package.JSON

"commandPalette": [
                {
                    "command": "ext.mc.openWorkspaceFolder",
                    "when": "never"
                }
            ],