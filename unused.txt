    export function getAppStatusEmoji(state: ProjectState.AppStates): string {
        // ⚠ ▶ ⏹ ❌ ❓ ❗ ✅ 🐞
        switch (state) {
            case ProjectState.AppStates.DISABLED:
                return "🚫";
            case ProjectState.AppStates.STARTED:
                return "🔵";
            case ProjectState.AppStates.STOPPED:
                return "🔴";
            case ProjectState.AppStates.STARTING:
            case ProjectState.AppStates.STOPPING:
                return "⚪";
            case ProjectState.AppStates.DEBUGGING:
                return "🐞";
            default:
                return "❓";
        }
    }

    export function getBuildStatusEmoji(state: ProjectState.BuildStates): string {
        switch(state) {
            case ProjectState.BuildStates.BUILDING:
            case ProjectState.BuildStates.BUILD_QUEUED:
                return "🔨";
            case ProjectState.BuildStates.BUILD_FAILED:
                return "❌";
            default:
                return "❓";
        }
    }

    # https://developer.github.com/v3/repos/releases/#create-a-release
gh_payload_builder="import json; payload={};
    payload['tag_name'] = 'nightly-$build_date';
    payload['target_commitish'] = $TRAVIS_COMMIT;
    payload['prerelease'] = true;
    print json.dumps(payload);
    "

gh_tag_payload="$(python2 -c \"$gh_payload_builder\")"
echo "$gh_tag_payload"

response="$(curl -X POST -H 'Content-Type: application/json' -u \"$github_username:$github_apitoken\" \"$git_repo_url\" --data \"$gh_tag_payload\")"

release_id=$(python2 -c "import json; json.loads(\"$response\")[\"id\"]")